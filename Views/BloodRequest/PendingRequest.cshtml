@using BBMS.ViewModels;
@model PaginatedViewModel<BloodRequest>

@{
    ViewData["Title"] = "View Pending Request";
    Layout = ViewData["Layout"]?.ToString();
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
      integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
      integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
      crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="https://code.jquery.com/jquery-3.6.4.min.js"
        integrity="sha256-oP6HI9z1XaZNBrJURtCoUT5SUnxFr8s3BzRl+cbzUq8=" crossorigin="anonymous"></script>

<section class="table_outer">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12">
                <div class="card border-0 shadow">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover table-striped table-borderless mb-0">
                                <thead class="table-success">
                                    <tr>
                                        <th scope="col">
                                            @Html.DisplayNameFor(model => model.Items.FirstOrDefault().PatientName)
                                        </th>
                                        <th scope="col">
                                            @Html.DisplayNameFor(model => model.Items.FirstOrDefault().PatientAge)
                                        </th>
                                        <th scope="col">
                                            @Html.DisplayNameFor(model => model.Items.FirstOrDefault().PatientHospital)
                                        </th>
                                        <th scope="col">
                                            @Html.DisplayNameFor(model => model.Items.FirstOrDefault().BloodType)
                                        </th>
                                        <th scope="col">
                                            @Html.DisplayNameFor(model => model.Items.FirstOrDefault().UnitNo)
                                        </th>
                                        <th scope="col">
                                            @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Status)
                                        </th>
                                        <th scope="col">
                                            @Html.DisplayNameFor(model => model.Items.FirstOrDefault().RequestDate)
                                        </th>
                                        <th scope="col">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Items)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.PatientName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.PatientAge)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.PatientHospital)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.BloodType)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.UnitNo)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Status)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.RequestDate)
                                            </td>
                                            <td>
                                                <a asp-action="Edit" asp-route-id="@item.Id" type="button" class="btn btn-success btn-sm px-2">
                                                    <i class="fa-solid fa-pen-to-square"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <nav aria-label="Page navigation example">
                            <ul class="pagination justify-content-end mt-3">
                                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)"
                                       asp-route-pageSize="Model.PageSize" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                                @for (int i = 1; i <= Model.TotalPages; i++)
                                {
                                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i"
                                           asp-route-pageSize="Model.PageSize">@i</a>
                                    </li>
                                }
                                <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)"
                                       asp-route-pageSize="Model.PageSize" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<style>
    body {
        background: #ededed;
    }

    .table_outer {
        padding: 20px 0;
    }

    table td,
    table th {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }

    .card {
        border-radius: .5rem;
    }
</style>
